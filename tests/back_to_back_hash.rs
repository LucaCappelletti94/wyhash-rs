extern crate core;
extern crate wyhash;
use core::hash::Hasher;
use wyhash::{wyhash, WyHash};

#[test]
fn wyhash_test() {
    let mut data = [0; 256];
    for i in 0..data.len() {
        data[i] = i as u8;
        assert_eq!(ORIGINAL_HASHES[i], wyhash(&data[..i], i as u64));
    }
}

#[test]
fn core_hasher() {
    let mut data = [0; 256];
    for i in 0..data.len() {
        data[i] = i as u8;
        let mut hasher = WyHash::with_seed(i as u64);
        hasher.write(&data[..i]);
        assert_eq!(ORIGINAL_HASHES[i], hasher.finish());
    }
}

// Results from the cannonical C implementation
#[allow(clippy::unreadable_literal)]
const ORIGINAL_HASHES: [u64; 256] = [
    0x71537625dae32df3,
    0x46d561fa19b325e3,
    0x5a436ff023035890,
    0xcc242106e7076a48,
    0x10169fd4a314aa94,
    0x7d72b2402780fbc3,
    0xec8e4f6caf3bdd89,
    0xeec31eee1752e59d,
    0xad20293e68e28d9,
    0xa4b0ee7c22e7ab58,
    0x2e61a464b8bd22f9,
    0x3c1a4d9d59ea9df0,
    0x788209435cb5ad94,
    0x1f82ab0b82b4cd48,
    0x38d018b256f15cfb,
    0x9a5d91c831835583,
    0xd670519f70ec636f,
    0x9cadae97c51b8797,
    0x23e1c12abb683879,
    0x32c39a89a515b2b5,
    0x73b4eff65ac366bd,
    0xd6d24607344a5af6,
    0x6ea3800665432862,
    0x4b5bb3d43e807b58,
    0x4c0ebf78aacc1079,
    0x1b0421f16c1f36d9,
    0xacc7c5a7f14d389f,
    0xd84aff48e3ebe1dc,
    0xe4c078ad91552d46,
    0x7c1082a6e6cead6,
    0x285f9b084d4f48d8,
    0x57e0f6006c1e27bd,
    0xee4ec93e3e3de557,
    0xbbefd4a4352f4c70,
    0x42372f38d574f2f6,
    0x55855f3554efc00e,
    0x97b23c289ed234bc,
    0x392f61f3398f0dcf,
    0x495be86f867bf2fa,
    0xef12df1163fc3d3e,
    0x5673dff7ea5bc124,
    0x76abbaff47036046,
    0xe8996d532868490f,
    0xa8b9abc8cfabd4b7,
    0x8cf95583a601062,
    0xe46f9599160fb464,
    0x2379cfcc26256100,
    0x6356cee82217abf,
    0xbc178bafbb5b1d0e,
    0xef4e68db685891ff,
    0x7f9d59563d8aae34,
    0x4da9c9a4ff7ae5d,
    0xf0c1796c63a7ecc3,
    0x7ec79a2b2477df8d,
    0x3966fee97470b351,
    0xd1d9fe1cfdcd0c56,
    0x190c9ec279fc9869,
    0x983a05c4fd65ff69,
    0xbf11c20090f7db95,
    0xca9dc0c60fda1e93,
    0xd784b138f550721d,
    0x9343288f0cd36f38,
    0x19dbad95309a2c77,
    0xb29b8f23f20b16e0,
    0xd9f72ed280f265f8,
    0xb839e4a84dc27a0,
    0xec9b4502092dc67,
    0x3cc7cd71bcd60fb3,
    0xcc9817c568fdf74a,
    0x1fa6e41c1649d721,
    0x9bfe6359bbe6600c,
    0x559fed3d2dbc16e8,
    0x77ffaf3c18d18d3b,
    0xf4fad45e8eff92e6,
    0x23b6fbc16ce4f96,
    0xfdfdf7f87a472b5e,
    0xc4fa0e743734522,
    0x7dffd9bcea899001,
    0x6f83212ddc2f0b9f,
    0xecbf36e951d4f497,
    0xed39dca6b9cdb7ce,
    0x4dfc0149bf913575,
    0x16e8d7e22d4d0300,
    0xd23e6e39355de73e,
    0x611e045823fde33e,
    0x8aabb10b0e708d89,
    0xd3a9e8ca74490e91,
    0xc20ce25c60c951d3,
    0x17c057a39989cd69,
    0x97ecd8aa63339c56,
    0x25508c2948538b50,
    0xa40a470dbaf69f46,
    0xfda0158dbd3e887c,
    0xa6849eea396866c7,
    0x54bf57f6b02e0c7a,
    0xffa0c2d736a0c74b,
    0x560dce305831676c,
    0xc54b6d7acd780c7f,
    0x9ad7a2cacb553b1f,
    0x1cc7e86a5e453e6c,
    0x206451df08dd041d,
    0x9e9281b682bc7738,
    0xa66ec907263f42c,
    0x29827cb9d7e98dff,
    0x2c2ce0971bd044c7,
    0x7fcb7b076c47b59c,
    0xcf65d096db0dcf6f,
    0x8927166419db7a64,
    0x58b2e72decb4eed8,
    0x2ea6778065b12639,
    0xccc9c454122bac0b,
    0xa91ca15827465532,
    0x1072d9c063ac7764,
    0x2cdeb7fbe2294c0f,
    0xe9286bae02896100,
    0x66168cf97516ce51,
    0x42cbc0c1e8e96cf4,
    0x5673d78f771ed5f4,
    0xa7d990d41a6c0df4,
    0xa59140494b4553fa,
    0x9d568e04db2d7203,
    0x57e8830d139f792c,
    0xa51c941d61f0e12c,
    0x42556c6ddeabb6f6,
    0x1d7e73cd758dcaa1,
    0xbe6e4928cc033580,
    0xee91006f51524522,
    0x5e9969c5c0030130,
    0x9411cf137b007c9a,
    0x999df3bd725886e1,
    0x23ff93bf0e7da73e,
    0xa14b9014a1a78ef1,
    0x44440f281cf5816d,
    0x4cc60745ae339dce,
    0x6d0b34ddf8f0f407,
    0x5ae29c310e34b964,
    0x544ed5cfec341c11,
    0xd171508c78c9a2cf,
    0x792568fa1aa6d9b7,
    0xb47fabb3205d3cc,
    0x7009e9468e11e2c8,
    0x94ed743676534f7c,
    0x25343d0bde60f83b,
    0x261266dd5bdfb972,
    0x545091ea84c810f5,
    0x5331d8781b6e0f86,
    0xad97728e67dbe5d3,
    0x8db526aa8ae0c0ac,
    0x57b419782df4e68e,
    0x8887e66f31e5743d,
    0x61fe111e3955868e,
    0xaa342ebeadcc13c7,
    0xdca62d529523b51,
    0x237462f1b6388173,
    0x2b112f0ac453e2d6,
    0xa124eddae0d956a9,
    0xc6fc6d760824f517,
    0xd48d6b758dd47c8f,
    0xbed84aa4ec9050de,
    0x412ac54dae61caee,
    0x8a111198b753598a,
    0x260b9a0d41f3b66c,
    0xe9b3af3a51dddb44,
    0xb052cf1d5ae067d7,
    0xa48ebfc034d1d6d5,
    0x378f1a5e3480fdcb,
    0x28935ce3ddcd232a,
    0xea42d51ba285ab23,
    0xbbdc8b66fb83eca3,
    0x25f720534cdc283c,
    0x66eb1c652c075375,
    0xe31076d4357b8dae,
    0x7b1c13eb0b6ebb18,
    0x3123187e92c6b6c5,
    0x935ed2291730f2d1,
    0xe237c81b28f8b14f,
    0x79fb640c34f3524c,
    0xdc54c9abf43433ed,
    0x272d9818cd56dc79,
    0xf00927e86273e2c1,
    0x880e307854b169de,
    0xe3627dfb4863e61f,
    0x349fc24d8755374,
    0xbfa9bdff3f546ae5,
    0x9e3f6e13cfa7bd19,
    0x414443d7e18897ff,
    0xdceea5c938c87c8d,
    0x694f6acc1f436435,
    0x6243d00b6bf1009c,
    0x746174f887ae9dee,
    0x965c6cfdb48aa100,
    0x12e45380c8fffb4e,
    0xa5a4c53807971294,
    0xd64f469fbb48998e,
    0x9be2e462fc4a902f,
    0x961325ee5fa66349,
    0x909a5996cf72edb4,
    0x744006fb6be016e1,
    0xdfb0992f485df23c,
    0xcfcdce56510d68a,
    0xe7acdfa0148975a,
    0xc67e95a409890417,
    0x312384e62eb676d4,
    0xa2622a55470a22b,
    0xaecfb7df097e2621,
    0x12ec2f9ec5c5c7bb,
    0x86950c68c8a8975d,
    0x1a065287868c6ca,
    0xed733edc9c1dabb9,
    0x38ec2839efef8e9d,
    0x858002369c9d4e13,
    0x6424aece241ddd59,
    0xdaa549b408044b33,
    0x5ce6f3454c060357,
    0xd79560476426c716,
    0xffd8db532d835817,
    0x819553ddf043cfb6,
    0xe3e2c830f96c707f,
    0x1a2c4307b86f93f7,
    0x856e67e0df38ed75,
    0x92734ef28069e348,
    0x33ea7e47a1b23cbd,
    0x2289e07105407b87,
    0xb0ae5565f5e497c7,
    0xf9c7f6e106c581bf,
    0x45959545becf2c92,
    0x2cb0020d32596000,
    0xc4687aaab110256c,
    0x51e30f63b7df9710,
    0x32cca19857556686,
    0x47c69824491bb1ed,
    0x32c8b79c7ad7be3c,
    0x8f730c492513d52d,
    0xdd91209127687dd3,
    0x5f99c4623e23695f,
    0x1df557a4c949640a,
    0xb022af69dbc7cf7b,
    0xaea33723b020f6ae,
    0x60eb99a3d1946660,
    0xa4ca5502c8269e6,
    0xd5a5920ca92c249e,
    0x7e55810e21155c64,
    0x2a3c09e70b86c4aa,
    0xb72008861c73a4fc,
    0xf3b69116788e0a57,
    0x9943563f85d6571,
    0x22015e2cfba9ba8f,
    0x4b306dcba45d4790,
    0x3eb01bb1b1558338,
    0x8d9bfc46930bc706,
    0x7dff32b8932d66d7,
    0xa0cf164b701e462e,
    0x6cc0ac8bbd2799f9,
    0x5ed393aa2ecf3378,
    0x545cbddff1ac9a30,
    0x14790015c4c830e7,
];
